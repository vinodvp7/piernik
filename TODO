-[X] Add solver_type in global.F90 to consider split vs unsplit
-[X] Add 7 constants for the fluxes in constant.F90
-[X] Add flux array in named_array_list.F90 but only added if unsplit solver is called
-[X] Add flux array shortcut call to grid_container_na.F90 but only if unsplit solver is called. Also add a subroutine to cleanup/initlaize flux array to 0.0 
-[X] Register the arrays in the cg_list_global.F90 but only if unsplit solver is called.
-[X] Create a new folder for unsplit solver methods
-[X] Create unsplit_fluid_update.F90 that contains the calls for all sources at the  S stage of the S A S stages and glm damping if magnetic is present.
-[X] Push the unsplit_sweep to unplit_fluid_update.F90.
-[X] Modification of recv_bnd and other ANR related functions. Instead of modifying the source code. Just create a wrapper and make a new module inside unsplit_methods folder.
-[X] Create a new module called solve_cg_unsplit that does MHD update for simple HD case.
-[X] Create another module that does the same as above for magnetic fluid.
-[X] Create a wrapper for calling sources in unsplit fashion
-[.] Modify the default value of cfl_glm so that it is 0.3 if solver_type = "unsplit" and 0.6 otherwise              < Instead just warn the user >
-[X] Modify hdc so that its subroutine glmdamping accepts an argument to make a half timestep damping or no . Check if eglm needs similar thing.
-[X] Modify timestep.F90 to have a condition of the dt at tend to not make it go by half if unsplit solver is chosen
-[ ] Add necessary comments for proper documentation
-[ ] Document each step as a set of instructions 
-[ ] Run each test in the problems folder and plot a comparision graph with split solver with following diagnostics : 
primitive variable evolution + comparision, L1/L2 error, time and nstep comparision, memory_usage, div B/psi comparision, Resolution effects, AMR, single core efficiency

################### END OF UNSPLIT SOLVER IMPLEMENTATION 

-[ ] Modify the fluidtypes.F90 to add extend the type component_fluid to consider a streaming CR fluid. Also modify var_numbers so that it counts in streaming CR species and set scr index.
-[ ] Modify fluidindex to add subroutine set SCR fluid index 
-[ ] Create a new folder streamingcr and add a new module intistreamingcr.F90 to read parameters from the namelist
-[ ] Modify cg_list_global.F90 to register this array (Need to think how separate or tag it along with fluid ? )
-[ ] Create a subroutine called scr_reimann_solver.F90 that implements both HLLE and HLLC solver for streaming cosmic rays
-[ ] Create a subroutine that does the streamingcr stuff so it takes cg does rotation operation. Add CR source terms implicitly 
-[ ] Modify the call prepare_sources so that ifdef STREAM_CR then it should also calculate sigma_scr using the present values of Bn , v and so on 
-[ ] Create a test problem similar to Jiang and Oh paper 


########################## NEW TODO #############################################

-[X] Check why the new unsplit_source  differs from the old unsplit if any ?         ! Its because of the way I call unsplit_sweep twice per nstep in the new solver (but compared to old this performs better)
-[X] Check fcfluxes so that all functions have helper function to un- sphagettify the code  ! Didnt desphagetify prioritized_cg but rest all has been desphagetified with minimal cpde  change
-[X] Check At this point compare sedov/sod2d/sod1d/jeans/magnetic_rotor/orszag_tang/field_loop/advection_test/MHD_blast_wave
-[X] Beautify unsplit_mag_modules.F90 
-[X] Beautify solve_cg_unsplit.F90 with correct sensible names to the subroutines and everything
-[X] Remove fluidupdate_unsplit and push the unsplit_sweep call inside fluid_update_full when solver_type is unsplit
-[X] Beautify unsplit_sweep
-[X] Beautify unsplit_boundaries or similar to split_sweep push it inside unsplit_sweep
-[X] Beautify unsplit_source
-[X] make CI 
-[ ] make -j CI                       ! Serious trouble for AMR + MPI 
-[ ] make help
-[ ] Add sod2d and sod3d problem and circular alfven wave propagation following Mignone et.al.
-[ ] Check also magnetic rotor and etc.
-[ ] Document "How to add a new solver"
-[ ] Pull request

########################## NEWER TODO #############################################
-[X] Modify constants.F90 with streaming cosmic rays
-[X] Modify global
-[X] Added scr related arrays in cg_list_global / named_array_list / grid_container_na
-[X] Modify fluidindex/fluidtypes/initfluid to include scr related subroutines and type
-[X] Modify common_hdf5 / hdf5_data to include scr related outputs 
-[X] Create a module called initstreamingcr for initialization of streaming cr related files
-[X] Modify all_boundaries/ unsplit_sweep / cg_list_bnd
-[X] Create a module of scr_helpers subtroutines that helps 
      -[X] Subroutine to rotate and inverse_rotate a vector that is pure/ elemental 
      -[X] Sanitize array 
      -[X] Check_for_positive
      -[X] Update_interaction_coefficient
      -[X] Gradient of Pc 2nd order and 4th order
      -[X] Calculate v_diffusion
-[ ] Create a module to do the transport of streaming cr
-[ ] Modify interpolations.F90 
-[ ] Create scr_source to handle streaming cosmic ray source term
-[ ] Modify unplit_source/ unsplit_mag_modules to include these pieces
-[X] timestep
-[ ] Create test problems
    -[X] Test1  - Simple advection of streaming cosmic ray with gaussian Ec without feedback in 1d
    -[X] Test2  - Simple advection of streaming cosmic ray with triangular Ec without feedback
    -[X] Test3  - Simple advection of streaming cosmic ray with gaussian Ec without feedback in 2d
    -[X] Test4  - Diffusion of gaussian Ec in 1d with v= 0 and v = 0.5 / 1 / -1 without feedback
    -[X] Test5  - Anisotropic diffusion of Ec in 2d with no streaming or feedback
    -[X] Test6  - Anisotropic diffusion of Ec in 2d with no streaming or feedback along a circular B field
    -[X] Test7  - Bottleneck Effect: Balance between CR Streaming and Heating Terms
    -[X] Test8  - CR-driven Waves with Mixed Diffusion and Streaming
    -[XX] Test9  - Shocks with CRs                                                                                      [SKIP] 
    -[ ] Test10 - CR Interactions with Warm Clouds
    -[X] Test11 - CR-driven Blast Waves without AMR
    -[ ] Test12 - CR-driven Blast Waves with AMR
    -[ ] Test13 - MCR test to test the source term Q
    -[ ] Test14 - Performance  test of the code 
-[ ] Check restart feature. Need to make sure if scaling of Fc is needed when reading from restart file
   

     



 



